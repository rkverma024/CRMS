@model CRMS.Core.ViewModel.FormMstViewModel

@{
    ViewBag.Title = "Edit";
}

@if (@TempData["Already"] != null)
{<div class="alert alert-danger">
        <span class="glyphicon glyphicon-remove-circle"></span>
        @TempData["Already"]
    </div>}

<html>
<head>
    <title></title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="mainDiv">
            <!-- Section -->
            <div class="section">
                <div class="container">
                    <!----- Form ---->
                    @Html.ValidationSummary(true, "", new { @class = "errorMsg" })
                    <div class="formDiv">
                        <div class="topTitleHead pb20">
                            <h1> Edit Form</h1>
                        </div>
                        <div class="formSection">
                            <div class="inputBox">
                                <label>Name</label>
                                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                @*<p class="errorMsg">This field is required</p>*@
                            </div>
                            <div class="inputBox">
                                <label>Navigate URL</label>
                                @Html.EditorFor(model => model.NavigateURL, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.NavigateURL, "", new { @class = "text-danger" })
                                @*<p class="errorMsg">This field is required</p>*@
                            </div>
                            <div class="inputBox">
                                <label>ParentFormId</label>
                                @Html.EditorFor(model => model.ParentFormId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ParentFormId, "", new { @class = "text-danger" })
                                @*<p class="errorMsg">This field is required</p>*@
                            </div>
                            <div class="inputBox">
                                <label>FormAccess Code</label>
                                @Html.EditorFor(model => model.FormAccessCode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FormAccessCode, "", new { @class = "text-danger" })
                                @*<p class="errorMsg">This field is required</p>*@
                            </div>
                            <div class="inputBox">
                                <label>Display Index</label>
                                @Html.EditorFor(model => model.DisplayIndex, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.DisplayIndex, "", new { @class = "text-danger" })
                                @*<p class="errorMsg">This field is required</p>*@
                            </div>
                            <div class="inputBox">
                                @*<label>Display Index</label>*@
                                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-3" })
                                @Html.CheckBoxFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                                @*<p class="errorMsg">This field is required</p>*@
                            </div>
                            <div class="Btn">
                                @*<button class="btnDiv">Login</button>*@
                                <button type="submit" value="Save" class="btnDiv">Save</button>
                            </div>
                        </div>
                       
                    </div>
                    <!----- END Form ---->
                </div>
            </div>
        </div>
    }
    <div>
        <a href="javascript:history.go(-1);">Back to List</a>
    </div>
</body>
</html>



@*<h2>Edit</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>FormMstViewModel</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NavigateURL, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NavigateURL, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NavigateURL, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ParentFormId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ParentFormId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ParentFormId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FormAccessCode, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FormAccessCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FormAccessCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DisplayIndex, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DisplayIndex, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DisplayIndex, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>
*@