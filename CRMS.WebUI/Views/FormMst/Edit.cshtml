@model CRMS.Core.ViewModel.FormMstViewModel

@{
    ViewBag.Title = "Edit";
}

@if (@TempData["Already"] != null)
{<div class="alert alert-danger">
        <span class="glyphicon glyphicon-remove-circle"></span>
        @TempData["Already"]
    </div>}

<html>
<head>
    <title></title>
    <style>
        .switch {
            position: relative;
            display: inline-block;
            width: 60px;
            height: 34px;
        }

            .switch input {
                opacity: 0;
                width: 0;
                height: 0;
            }

        .slider {
            position: absolute;
            cursor: pointer;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background-color: #ccc;
            -webkit-transition: .4s;
            transition: .4s;
        }

            .slider:before {
                position: absolute;
                content: "";
                height: 26px;
                width: 26px;
                left: 4px;
                bottom: 4px;
                background-color: white;
                -webkit-transition: .4s;
                transition: .4s;
            }

        input:checked + .slider {
            background-color: #2196F3;
        }

        input:focus + .slider {
            box-shadow: 0 0 1px #2196F3;
        }

        input:checked + .slider:before {
            -webkit-transform: translateX(26px);
            -ms-transform: translateX(26px);
            transform: translateX(26px);
        }

        .slider.round {
            height: 25px;
            width: 50px;
            border-radius: 34px;
        }

            .slider.round:before {
                height: 18px;
                width: 18px;
                border-radius: 50%;
            }
    </style>
</head>
<body>
    <div class="section">
        <div class="container" style="background-color:#efefef">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true, "", new { @class = "errorMsg" })
                            <div class="formDiv">
                                <div class="topTitleHead pb20">
                                    <h2> Edit Form</h2>
                                </div>
                                <div class="formSection">
                                    <div class="inputBox">
                                        <label>Name</label>
                                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="inputBox">
                                        <label>Navigate URL</label>
                                        @Html.EditorFor(model => model.NavigateURL, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.NavigateURL, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="inputBox selectBox">
                                        <label>Parent Form</label>
                                        @Html.DropDownListFor(model => model.ParentFormId, new SelectList(Model.Dropdown, "Id", "Name"),
                     "Select Parent", new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ParentFormId, "", new { @class = "errorMsg" })
                                    </div>
                                    <div class="inputBox">
                                        <label>Form Access Code</label>
                                        @Html.EditorFor(model => model.FormAccessCode, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.FormAccessCode, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="inputBox">
                                        <label>Display Index</label>
                                        @Html.EditorFor(model => model.DisplayIndex, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.DisplayIndex, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="inputBox">
                                        <label>IsActive</label>
                                        <label class="switch">
                                            <input type="checkbox" id="toggle" name="IsActive" @(Model.IsActive ? "checked" : "")>

                                            <span class="slider round"></span>
                                        </label>

                                        <label>IsMenu</label>
                                        <label class="switch">
                                            <input type="checkbox" id="toggle1" name="IsMenu" @(Model.IsMenu ? "checked" : "")>
                                            <span class="slider round"></span>
                                        </label>
                                    </div>
                                    <div class="btn col-lg-12">
                                        <button type="submit" value="Save" class="btnDiv">Save</button>
                                    </div>
                                </div>

                            </div>
            }
            <div class="btn btn-primary">
                <a style="color:white" href="javascript:history.go(-1);">Back to List</a>
            </div>
            </div>
        </div>
</body>
</html>
<script>

    var isChecked = false;
    isChecked = "@Model.IsActive";
    if (isChecked) {
    $('#toggle').val(true);
    $('#toggle').toggleClass('active');
    }
    else {
    $('#toggle').val(false);
    }

    var isChecked = false;
    isChecked = "@Model.IsMenu";
    if (isChecked) {
     $('#toggle1').val(true);
     $('#toggle1').toggleClass('active');
    }
    else {
    $('#toggle1').val(false);
    }
</script>