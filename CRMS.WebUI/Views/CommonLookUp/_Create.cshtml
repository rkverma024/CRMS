@model CRMS.Core.ViewModel.CommonLookUpViewModel
@{
    Layout = null;
}
<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
@if (@TempData["Already"] != null)
{<div class="alert alert-success">
        @*<strong>Success..!</strong>*@
        @TempData["Already"]

    </div>  }

@*<meta name="viewport" content="width=device-width, initial-scale=1">
<style>
    .switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 34px;
    }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
        }

    input:checked + .slider {
        background-color: #2196F3;
    }

    input:focus + .slider {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked + .slider:before {
        -webkit-transform: translateX(26px);
        -ms-transform: translateX(26px);
        transform: translateX(26px);
    }

    /* Rounded sliders */
    .slider.round {
        border-radius: 34px;
    }

        .slider.round:before {
            border-radius: 50%;
        }
</style>*@

<div class="modal-dialog" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <h3>Create CommonLookup</h3>
        </div>
        <div class="modal-body">
            <form name="Createform" id="myform">
                @Html.AntiForgeryToken()
                <div class="form-group">
                    <div class="row">

                        @Html.LabelFor(model => model.ConfigName, htmlAttributes: new { @class = "control-label col-md-3" })

                        @Html.EditorFor(model => model.ConfigName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfigName, "", new { @class = "text-danger" })

                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(model => model.ConfigKey, htmlAttributes: new { @class = "control-label col-md-3" })

                        @Html.EditorFor(model => model.ConfigKey, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfigKey, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">

                        @Html.LabelFor(model => model.ConfigValue, htmlAttributes: new { @class = "control-label col-md-3" })

                        @Html.EditorFor(model => model.ConfigValue, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfigValue, "", new { @class = "text-danger" })

                    </div>
                </div>
                <div class="form-group">
                    <div class="row">

                        @Html.LabelFor(model => model.DisplayOrder, htmlAttributes: new { @class = "control-label col-md-3" })

                        @Html.EditorFor(model => model.DisplayOrder, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DisplayOrder, "", new { @class = "text-danger" })

                    </div>
                </div>
                <div class="form-group">
                    <div class="row">

                        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-3" })

                        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-3" })
                        @Html.CheckBoxFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })

                        @*IsActive
        <label class="switch">
            <input type="checkbox" checked>
            <span class="slider round"></span>
        </label>*@

                        @*    <div class="form-check form-switch">
            <label class="form-check-label" for="">Is Active</label>
            <input type="hidden" name="IsActive" value="True" checked>
            <input type="checkbox" id="IsActive" class="form-check-input" name="IsActive" value="False" checked>
        </div>*@


                        @*<div class="form-group toggle-switch">
            <input type="checkbox" name="IsActive" id="toggle" class="toggle-input" style="margin-right:10px" />
            <label for="toggle" class="toggle-label" id="toggle-label"></label>
            <label>IsActive</label>
        </div>*@

                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-danger" onclick="closePopup()">Close</button>
                    <button type="submit" class="btn btn-success">Save</button>
                </div>
            </form>
        </div>

    </div>
</div>

<script src='@Url.Content("~/Scripts/jquery.validate.js")' type='text/javascript'></script>
<script src='@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")' type='text/javascript'></script>

<script>
    function closePopup() {
        location.reload();
    }
    $('#myform').submit(function (e) {

        e.preventDefault();
        var $form = $(this);
        if (!$form.valid) return false;
        var ConfigName = $('#ConfigName').val();
        var ConfigKey = $('#ConfigKey').val();
        if (ConfigName != "" && (ConfigName == ConfigKey)) {
            alert("ConfigName and ConfigKey not be Same")
            return false;
        }
        $.ajax({
            url: '@Url.Action("Create","CommonLookUp")',
            type: "Post",
            data: $form.serialize(),
            success: function (data) {
                if (data == "true") {
                    location.reload();
                }
                else if (data == "exists") {
                    alert("Data Already Exists");
                }
            }
        });
    });
</script>