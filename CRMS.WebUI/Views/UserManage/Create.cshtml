@model CRMS.Core.ViewModel.UserViewModel

@if (@TempData["Already"] != null)
{<div class="alert alert-danger">
        <span class="glyphicon glyphicon-remove-circle"></span>
        @TempData["Already"]
    </div>}
<br/><br/>
<html>
<head>
    <title></title>
</head>
<body>
    <div class="section">
        <div class="container">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="formDiv">
                    <div class="topTitleHead pb20">
                        <h2> Add New User</h2>
                        <a class="backbtn" href="javascript:history.go(-1);"><i class="glyphicon glyphicon-arrow-left"></i> Back to List</a>
                    </div>
                    <div class="formSection">
                        <div class="inputBox">
                            <label>Name</label>
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                            @* <p class="errorMsg">This field is required</p>*@
                        </div>
                        <div class="inputBox">
                            <label>User Name</label>
                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            @* <p class="errorMsg">This field is required</p>*@
                        </div>
                        <div class="inputBox selectBox">
                            <label>Role</label>
                            @Html.DropDownListFor(model => model.Role, new SelectList(Model.RoleDropdown, "Id", "Name"),
           "Select Role", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Role, "", new { @class = "text-danger" })
                        </div>
                        <div class="inputBox">
                            <label>Email</label>
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                        <div class="inputBox">
                            <label>Password</label>
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                        <div class="inputBox">
                            <label>Mobile Number</label>
                            @Html.EditorFor(model => model.MobileNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.MobileNo, "", new { @class = "text-danger" })
                        </div>
                        <div class="inputBox customRadioBtn w-100">
                            <label>Gender</label>
                            <div class="radioBtnSection">
                                <div class="radioBtnDiv">
                                    Male
                                    @Html.RadioButtonFor(model => model.Gender, "Male")
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                    <span class="checkmark"></span>
                                </div>
                                <div class="radioBtnDiv">
                                    Female
                                    @Html.RadioButtonFor(model => model.Gender, "Female")
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                    <span class="checkmark"></span>
                                </div>

                            </div>
                        </div>

                        <div class="inputBox">
                            <button type="submit" value="Create" class="btnDiv">Create</button>
                        </div>

                    </div>
                   @* <div class="btn" style="background: #d9534f">
                           @Html.ActionLink("Back", "Index", "Home", null, new { @class = "btn btn-primary" })
                        <a style="color:white" href="javascript:history.go(-1);">Cancel</a>
                    </div>*@
                </div>
            }
        </div>
    </div>
</body>
</html>