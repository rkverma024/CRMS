@model CRMS.Core.ViewModel.RoleViewModel

@{
    ViewBag.Title = "Edit";
}

@if (@TempData["Already"] != null)
{<div class="alert alert-danger">
     <span class="glyphicon glyphicon-remove-circle"></span>    
    @TempData["Already"]        
    </div>     }

<html>
<head>
    <title></title>
</head>
<body>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="mainDiv">
            <!-- Section -->
            <div class="section">
                <div class="container">
                    <!----- Form ---->
                    @Html.ValidationSummary(true, "", new { @class = "errorMsg" })
                    @Html.HiddenFor(model => model.Id)
                    <div class="formDiv">
                        <div class="topTitleHead pb20">
                            <h1>Edit Role</h1>
                        </div>
                        <div class="formSection">
                            <div class="inputBox">
                                <label>RoleName</label>
                                @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "errorMsg" })
                                @*<p class="errorMsg">This field is required</p>*@
                            </div>
                            <div class="inputBox">
                                <label>Code</label>
                                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "errorMsg" })
                                @*<p class="errorMsg">This field is required</p>*@
                            </div>
                            <div class="inputBox">
                                @*<button class="btnDiv">Login</button>*@
                                <button type="submit" value="Save" class="btnDiv">Save</button>
                                @*<input type="submit" value="Save" class="btn btn-success" />*@
                            </div>
                        </div>
                    </div>
                    <!----- END Form ---->
                </div>
            </div>
        </div>
    }
    <div>
        <a href="javascript:history.go(-1);">Back to List</a>
        @* @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })*@
    </div>
</body>
</html>










@*
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()*@

    <!--<div class="form-horizontal">-->
        @*<h4>Role</h4>*@
        <!--<hr />-->
       @* @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)*@

        <!--<div class="form-group">-->
           @* @Html.LabelFor(model => model.RoleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })*@
            <!--</div>
        </div>

        <div class="form-group">-->
           @* @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })*@
            <!--</div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>-->
    @*  @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })*@
    <!--<a href="javascript:void(0);" onclick="history.go(-1);">Back to List</a>
</div>-->

