@model IEnumerable<CRMS.Core.ViewModel.TicketIndexViewModel>


@using Kendo.Mvc.UI
@using CRMS.Core.ViewModel
<br />
<br />
<br />
<br />
<br />

@if (@TempData["AlertMessage"] != null)
{<div class="alert alert-success">
        <span class="glyphicon glyphicon-saved"></span>
        @TempData["AlertMessage"]
    </div>  }

@if (@TempData["DeleteMessage"] != null)
{<div class="alert alert-danger">
        <span class="glyphicon glyphicon-trash"></span>
        @TempData["DeleteMessage"]
    </div>  }

<div class="align-center align-between pb20">
    <h2>Ticket</h2>
    @if (CRMS.Core.ViewModel.CheckRoleRights.Insert == true)
    {
        <div class="btnDiv">
            <a href="@Url.Action("Create", "Ticket")">+ Create Ticket</a>
        </div>
    }
</div>

<div class="container">
    <div class="row">

        @(
        Html.Kendo().Grid(Model).Name("Ticketgrid").Columns(columns => {
            columns.Bound(expression: c => c.Title).Width(140);
            columns.Bound(expression: c => c.AssignTo).Width(140);
            columns.Bound(expression: c => c.TypeId);
            columns.Bound(expression: c => c.PriorityId).Width(130);
            columns.Bound(expression: c => c.StatusId).Width(130);
            columns.Bound(expression: c => c.Description);
            columns.Bound(expression: c => c.FileName);

            if (CheckRoleRights.Edit || CheckRoleRights.Delete)
            {
                columns.Bound(p => p.Id).ClientTemplate(
                  "#if ('" + CRMS.Core.ViewModel.CheckRoleRights.Edit + "'=='True') {#"
                  + " <a href='" + Url.Action("Edit", "Ticket") + "/#=Id#'class='btn btn-primary'><i class='glyphicon glyphicon-pencil'></i></a>"
                  + "#}#"

                  + "#if ('" + CRMS.Core.ViewModel.CheckRoleRights.Delete + "'=='True') {#"
                  + " | <a href='" + Url.Action("Delete", "Ticket") + "/#=Id#' class='btn btn-danger'  onclick='return confirm(\"Are you sure..?\")'><i class='glyphicon glyphicon-trash'></i></a>"
                  + "#}#"

            ).Width(150).Title("Action").Filterable(false);
            }

        }).ToolBar(toolbar =>
        {
            toolbar.Template(@<text>
                    <div class="toolbar">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="input-group">
                                    <span class="input-group-addon"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></span>
                                    <input type="text" class="form-control" id='TicketFieldFilter' placeholder="Search for...">
                                    @*<span class="input-group-btn">
                                        <button class="btn btn-default" type="button"><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></button>
                                    </span>*@
                                </div>
                            </div>
                        </div>
                    </div>
                </text>);
        })
        .HtmlAttributes(new { style = "height:400px;" })
        .NoRecords("No record found")
        .Sortable()
        .Scrollable()
        .Filterable()
        .Pageable(pageable => pageable.Refresh(true).PageSizes(true))
        .DataSource(dataSource => dataSource.Ajax().Read(read => read.Action("TicketsGrid", "Ticket"))
        .Model(model => model.Id(p => p.Id)))
    )

    </div>
</div>

<!--<script>
    $(document).ready(function () {-->
@* $('#Formgrid').data('kendoGrid').dataSource.read();
    $('#Formgrid').data('kendoGrid').refresh();*@

<!--$("#TicketFieldFilter").keyup(function () {

            var value = $("#TicketFieldFilter").val();
            grid = $("#Ticketgrid").data("kendoGrid");

            if (value) {
                grid.dataSource.filter({
                    logic: "or",
                    filters: [
                        {
                            field: "Titel",
                            operator: "contains",
                            value: value
                        },
                        {
                            field: "Description",
                            operator: "contains",
                            value: value
                        },
                        {
                            field: "AssignTo",
                            operator: "contains",
                            value: value
                        },
                        {
                            field: "TypeId",
                            operator: "contains",
                            value: value
                        },
                        {
                            field: "PriorityId",
                            operator: "contains",
                            value: value
                        },
                        {
                            field: "StatusId",
                            operator: "contains",
                            value: value
                        },
                    ]
                });
            } else {
                grid.dataSource.filter({});
            }
        });
    });
</script>-->
@*@{
        ViewBag.Title = "Index";
    }

    <h2>Index</h2>

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Title)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AssignTo)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TypeId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PriorityId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StatusId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <th></th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AssignTo)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TypeId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PriorityId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.StatusId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.Id })
            </td>
        </tr>
    }

    </table>*@
