@model IEnumerable<CRMS.Core.ViewModel.TicketIndexViewModel>
@using Kendo.Mvc.UI
@using CRMS.Core.ViewModel
<br /><br /><br />

@if (@TempData["AlertMessage"] != null)
{<div class="alert alert-success">
        <span class="glyphicon glyphicon-saved"></span>
        @TempData["AlertMessage"]
    </div>  }

@if (@TempData["DeleteMessage"] != null)
{<div class="alert alert-danger">
        <span class="glyphicon glyphicon-trash"></span>
        @TempData["DeleteMessage"]
    </div>  }

<script src="~/Scripts/bootstrap.min.js"></script>
<div id="image">
    <div class="modal" id="showimage" data-url='@Url.Action("TicketAttachment","Ticket")'></div>
</div>
<script>
    function DisplayModal(Id) {
        var id = Id;
        $.ajax({
            url: '/Ticket/TicketAttachment?ticketId=' + id,
            type: "Get",
            data: { 'id': id },
            success: function (res) {
                $("#showimage").html(res);
                $("#showimage").modal('show');
            }
        });
    }
</script>

<div class="section">
    <div class="container">
        <div class="align-center align-between pb20">
            <h2>Ticket</h2>
            <div class="dropdown">
                @{
                    var DropDown = Model.FirstOrDefault().StatusDropDown;
                }
                @(Html.Kendo().DropDownList().Name("Status")
                     .OptionLabel("Select status..")
                     .DataTextField("Name")
                     .DataValueField("Name")
                     .Events(e=>e.Change("onChange"))
                     .Filter("contains")
                     .BindTo(DropDown)
                     )
            </div>
            @if (CRMS.Core.ViewModel.CheckRoleRights.Insert == true)
            {
                <div class="btnDiv">
                    <a href="@Url.Action("Create", "Ticket")">+ Create Ticket</a>
                </div>
            }
        </div>
        <div class="row">

            @(Html.Kendo().Grid(Model).Name("Ticketgrid").Columns(columns => {
                columns.Bound(expression: c => c.Title).Width(140);
                columns.Bound(expression: c => c.AssignTo).Width(120);
                columns.Bound(expression: c => c.TypeId);
                columns.Bound(expression: c => c.PriorityId).Width(130);
                columns.Bound(expression: c => c.StatusId).Width(110);
                columns.Bound(expression: c => c.Description);

                columns.Bound(p => p.FileName).ClientTemplate(
               "#if (FileName > 0)"
               + " {#"
                   + "<a onclick='DisplayModal(\"#=Id#\")' class='btn btn-success'><i class='glyphicon glyphicon-picture'></i>  #=FileName#</a>"
               + "#}#").Width(120).Title("Image");

                if (CheckRoleRights.Edit || CheckRoleRights.Delete)
                {
                    columns.Bound(p => p.Id).ClientTemplate(
                      "#if ('" + CRMS.Core.ViewModel.CheckRoleRights.Edit + "'=='True') {#"
                      + " <a href='" + Url.Action("Edit", "Ticket") + "/#=Id#'class='btn btn-primary'><i class='glyphicon glyphicon-pencil'></i></a>"
                      + "#}#"

                      + "#if ('" + CRMS.Core.ViewModel.CheckRoleRights.Delete + "'=='True') {#"
                      + " | <a href='" + Url.Action("Delete", "Ticket") + "/#=Id#' class='btn btn-danger'  onclick='return confirm(\"Are you sure..?\")'><i class='glyphicon glyphicon-trash'></i></a>"
                      + "#}#"

                ).Width(120).Title("Action").Filterable(false);
                }

            }).ToolBar(toolbar =>
            {
            toolbar.Template(@<text>
                    <div class="toolbar">
                        <div class="row">
                            <div class="col-md-4">
                                <div class="input-group">
                                    <span class="input-group-addon"><span class="glyphicon glyphicon-search" aria-hidden="true"></span></span>
                                    <input type="text" class="form-control" id='FormFieldFilter' placeholder="Search for...">
                                     <span class="input-group-btn">
                                        <a href="@Url.Action("Index", "Ticket")" button class="btn btn-default" type="button" ><span class="glyphicon glyphicon-refresh" aria-hidden="true"></span></a>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </text>);
        })
        .HtmlAttributes(new { style = "height:390px;" })
        .NoRecords("No record found")
        .Sortable()
        .Scrollable()
        .Filterable()
        .Pageable(pageable => pageable.Refresh(true).PageSizes(true))
        .DataSource(dataSource => dataSource.Ajax().Read(read => read.Action("TicketsGrid", "Ticket"))
        .Model(model => model.Id(p => p.Id)))
     )
        </div>
    </div>
</div>

<script>
    function onChange(e) {
        var value = $("#Status").val();
        grid = $("#Ticketgrid").data("kendoGrid");
        if (value) {
            grid.dataSource.filter({ field: "StatusId", operator: "contains", value: value });
        } else {
            grid.dataSource.filter({});
        }
    }

    $(document).ready(function () {
       
        $("#FormFieldFilter").keyup(function () {

            var value = $("#FormFieldFilter").val();
            grid = $("#Ticketgrid").data("kendoGrid");

            if (value) {
                grid.dataSource.filter({
                    logic: "or",
                    filters: [
                        {
                            field: "Title",
                            operator: "contains",
                            value: value
                        },
                        {
                            field: "AssignTo",
                            operator: "contains",
                            value: value
                        },
                        {
                            field: "TypeId",
                            operator: "contains",
                            value: value
                        },
                        {
                            field: "PriorityId",
                            operator: "contains",
                            value: value
                        },
                        {
                            field: "StatusId",
                            operator: "contains",
                            value: value
                        },
                        {
                            field: "Description",
                            operator: "contains",
                            value: value
                        },
                    ]
                });
            } else {
                grid.dataSource.filter({});
            }
        });
    });
</script>
